<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ch.hftm</groupId>
  <artifactId>anygui</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>anygui</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javafx.version>22.0.2</javafx.version>           <!-- JavaFX version -->
    <javalin.version>6.3.0</javalin.version>          <!-- Javalin version -->
    <jetty.version>11.0.16</jetty.version>            <!-- Jetty version -->
    <slf4j.version>2.0.16</slf4j.version>             <!-- SLF4J version -->
    <junit.version>5.11.0</junit.version>             <!-- JUnit 5 version -->
    <toml4j.version>0.7.3</toml4j.version>            <!-- TOML4J version -->
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
  </properties>


  <dependencies>

    <!-- JavaFX Dependencies -->
    <dependency> <!-- Provides essential JavaFX UI components like buttons, labels, and text fields. -->
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>22.0.2</version>
    </dependency>
    <dependency> <!-- Supports loading and managing UI layouts defined in FXML files. -->
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency> <!-- Embeds web content into JavaFX applications using a WebView. -->
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>22.0.2</version>
    </dependency>

    <!-- TOML4J for TOML parsing -->
    <dependency> <!-- A Java library to parse and manipulate TOML configuration files. -->
      <groupId>io.hotmoka</groupId>
      <artifactId>toml4j</artifactId>
      <version>${toml4j.version}</version>
    </dependency>

    <!-- JUnit 5 for testing -->
    <dependency> <!-- Core API for writing JUnit 5 unit tests. -->
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- Executes JUnit 5 tests. -->
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- SLF4J for logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.16</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.8</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.5.8</version>
    </dependency>

    <!-- Javalin dependency -->
    <dependency> <!-- Provides a fully functional, scalable HTTP server. -->
      <groupId>io.javalin</groupId>
      <artifactId>javalin</artifactId>
      <version>${javalin.version}</version>
    </dependency>

    <!-- Jetty dependencies -->
    <dependency> <!-- Provides a fully functional, scalable HTTP server. -->
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency> <!-- Adds support for servlet handling in Jetty, useful for web applications. -->
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>5.14.1</version> <!-- Make sure to use the latest version -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.14.1</version> <!-- Check the latest version on Maven Central -->
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <!-- Plugin for running the JavaFX application locally -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.8</version>
        <executions>
          <execution>
            <goals>
              <goal>run</goal> <!-- mvn javafx:run -->
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>ch.hftm.App</mainClass>
          <options>
            <option>--add-modules=javafx.controls,javafx.fxml</option>
          </options>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
